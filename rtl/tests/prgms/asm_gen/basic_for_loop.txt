// for loop structure
// see if branch predictor learns pattern
// (written inefficiently on purpose)

// init
addi, x2,  x0, 2 // x2 = 2
addi, x3,  x0, 3 // x3 = 3
addi, x5,  x0, 5 // x5 = 5 (number of times in for loop)
addi, x7,  x0, 0 // x7 = 0 (num for loops)

addi, x1,  x0, 0 // x1 = 0 (initialize counter)
// LOOP:
addi, x2,  x2, 1
addi, x3,  x3, 1
addi, x1,  x1, 1 // incr counter
blt,  x1,  x5, -3 // loop back if condition not met
//blt,  x5,  x1, -8 // should NEVER be taken
//add, x12, x0, x2
//add, x13, x0, x3
//addi, x7,  x7, 1 // incr for loop count
//j, -9            // run for loop again forever

blt,  x5,  x1, -8 // should NEVER be taken
add, x12, x0, x2
add, x13, x0, x3
addi, x7,  x7, 1 // incr for loop count
j, 0
